package com.threeC.server;

import java.util.List;

import org.jwebsocket.factory.JWebSocketFactory;
import org.jwebsocket.server.TokenServer;
import org.jwebsocket.kit.WebSocketServerEvent;
import org.jwebsocket.api.WebSocketConnector;
import org.jwebsocket.api.WebSocketServerListener;
import org.jwebsocket.api.WebSocketPacket;
import org.jwebsocket.config.JWebSocketConfig;
import org.jwebsocket.instance.JWebSocketInstance;

class JWebSocketListener implements WebSocketServerListener {
	List<WebSocketConnector> connections;
	
	
	@Override
	public void processOpened(WebSocketServerEvent event) {	
		connections.add(event.getConnector());
		System.out.println("Connection Opened");
		System.out.println(connections.toString());
	}
	
	@Override
	public void processPacket(WebSocketServerEvent event, WebSocketPacket packet) {
		System.out.println("Packet Received");
	}
	
	@Override
	public void processClosed(WebSocketServerEvent event) {
		connections.remove(event.getConnector());
		System.out.println("Connection Closed");
		System.out.println(connections.toString());
	}
}

public class ServerMain {
	public static void main(String[] args){
		JWebSocketFactory.printCopyrightToConsole();
		JWebSocketConfig.initForConsoleApp(args);
		JWebSocketFactory.start();
		TokenServer server = (TokenServer)JWebSocketFactory.getServer("ts0");
		
		assert server != null;

		server.addListener(new JWebSocketListener());		
		while (JWebSocketInstance.getStatus() != JWebSocketInstance.SHUTTING_DOWN){
			try {
				Thread.sleep(250);
			} catch (InterruptedException e) {}
		}
		System.out.println("Server shutting down...");
	}
}
