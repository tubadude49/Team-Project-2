<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN//EN" " http://www.springframework.org/dtd/spring-beans.dtd"> 
<beans>
	
	<!-- the MySQL DataSource (parameterized for configuration via a PropertyPlaceHolderConfigurer)  -->
	<bean id="mysqlDataSource" destroy-method="close" class="org.apache.commons.dbcp.BasicDataSource">
		<!-- the JDBC driver class for MySQL -->
		<property name="driverClassName" value="com.mysql.jdbc.Driver"/>
		<!-- the URL to the MySQL server -->
		<property name="url" value="jdbc:mysql://localhost:3306/jwebsocket"/>
		<!-- database user and password for this connection -->
		<property name="username" value="jwsSys"/>
		<!-- password, please ensure that the location of this 
			JDBC config file is properly secured in your network! -->
		<property name="password" value="sys_password"/>
		<!-- Timeout in seconds before connection validation queries fail. -->
		<property name="validationQueryTimeout" value="5"/>
		<!-- The maximum number of milliseconds that the pool will wait 
			 (when there are no available connections) for a connection to be 
			 returned before throwing an exception, or <= 0 to wait indefinitely. -->
		<property name="maxWait" value="3000"/>
		<!-- The initial number of connections that are created 
			when the pool is started. -->
		<property name="initialSize" value="2"/>
		<!-- The maximum number of active connections that can be allocated 
			 from this pool at the same time, or negative for no limit. --> 
		<property name="maxActive" value="2"/>
	</bean>
	
    <!-- the Oracle DataSource (parameterized for configuration via a PropertyPlaceHolderConfigurer) -->
	<bean id="oracleDataSource" destroy-method="close" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="oracle.jdbc.driver.OracleDriver"/>
		<property name="url" value="jdbc:oracle:thin:@localhost:1521:ORCL"/>
		<property name="username" value="username"/>
		<property name="password" value="password"/>
	</bean>

	<bean id="mySQLNativeAccess" class="org.jwebsocket.plugins.jdbc.NativeAccess">
		<!-- here you can select which datasource to use 
			 for the native JDBC access component (field "ref") -->
		<property name="dataSource" ref="mysqlDataSource"/>
		
		<!-- MySql command to retrieve a sequence value -->
		<property name="selectSequenceSQL" value="select getSequence('${sequence}')"/>
		<!-- MySql command to call a function -->
		<property name="execFunctionSQL" value="select ${funcname}(${args})"/>
		<!-- MySql command to execute a stored procedure -->
		<property name="execStoredProcSQL" value="call ${procname}(${args})"/>
	</bean>

	<bean id="oracleNativeAccess" class="org.jwebsocket.plugins.jdbc.NativeAccess">
		<!-- here you can select which datasource to use 
			 for the native JDBC access component (field "ref") -->
		<property name="dataSource" ref="oracleDataSource"/>
		
		<!-- Oracle command to retrieve a sequence value -->
		<property name="selectSequenceSQL" value="select &quot;${sequence}&quot;.NEXTVAL FROM DUAL"/>
		<!-- Oracle  command to call a function -->
		<property name="execFunctionSQL" value="select ${funcname}(${args})"/>
		<!-- Oracle  command to execute a stored procedure -->
		<property name="execStoredProcSQL" value="call ${procname}(${args})"/>
	</bean>

	<!-- select here between MySQL or Oracle or any further JDBC source (alternatively, not commonly) -->
	<alias name="mySQLNativeAccess" alias="nativeAccess"/>
	<!-- <alias name="oracleNativeAccess" alias="nativeAccess"/> -->
</beans>